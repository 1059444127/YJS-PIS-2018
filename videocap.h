#if !defined(AFX_VIDEOCAP1_H__723BE956_AEC5_4A0E_BA91_F54D348D2722__INCLUDED_)
#define AFX_VIDEOCAP1_H__723BE956_AEC5_4A0E_BA91_F54D348D2722__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CDevices;
class CVideoFormats;
class CVideoInputs;

/////////////////////////////////////////////////////////////////////////////
// CVideoCap wrapper class

class CVideoCap : public CWnd
{
protected:
	DECLARE_DYNCREATE(CVideoCap)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xaa408ecc, 0xe50b, 0x401f, { 0x80, 0x36, 0x2, 0x1e, 0x81, 0xb9, 0xe5, 0xa1 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	short GetDevice();
	void SetDevice(short);
	short GetVideoFormat();
	void SetVideoFormat(short);
	CDevices GetDevices();
	void SetDevices(LPDISPATCH);
	CVideoFormats GetVideoFormats();
	void SetVideoFormats(LPDISPATCH);
	LPDISPATCH GetVideoCompressors();
	void SetVideoCompressors(LPDISPATCH);
	BOOL GetCaptureMode();
	void SetCaptureMode(BOOL);
	CString GetCaptureFileName();
	void SetCaptureFileName(LPCTSTR);
	LPDISPATCH GetBrightness();
	void SetBrightness(LPDISPATCH);
	LPDISPATCH GetContrast();
	void SetContrast(LPDISPATCH);
	LPDISPATCH GetHue();
	void SetHue(LPDISPATCH);
	LPDISPATCH GetSaturation();
	void SetSaturation(LPDISPATCH);
	LPDISPATCH GetSharpness();
	void SetSharpness(LPDISPATCH);
	LPDISPATCH GetGamma();
	void SetGamma(LPDISPATCH);
	LPDISPATCH GetColorEnable();
	void SetColorEnable(LPDISPATCH);
	LPDISPATCH GetWhiteBalance();
	void SetWhiteBalance(LPDISPATCH);
	LPDISPATCH GetBacklightCompensation();
	void SetBacklightCompensation(LPDISPATCH);
	LPDISPATCH GetGain();
	void SetGain(LPDISPATCH);
	LPDISPATCH GetPan();
	void SetPan(LPDISPATCH);
	LPDISPATCH GetTilt();
	void SetTilt(LPDISPATCH);
	LPDISPATCH GetRoll();
	void SetRoll(LPDISPATCH);
	LPDISPATCH GetZoom();
	void SetZoom(LPDISPATCH);
	LPDISPATCH GetExposure();
	void SetExposure(LPDISPATCH);
	LPDISPATCH GetIris();
	void SetIris(LPDISPATCH);
	LPDISPATCH GetFocus();
	void SetFocus(LPDISPATCH);
	LPDISPATCH GetAudioDevices();
	void SetAudioDevices(LPDISPATCH);
	short GetAudioDevice();
	void SetAudioDevice(short);
	BOOL GetCaptureAudio();
	void SetCaptureAudio(BOOL);
	short GetVideoCompressor();
	void SetVideoCompressor(short);
	short GetAudioCompressor();
	void SetAudioCompressor(short);
	BOOL GetUseVideoCompressor();
	void SetUseVideoCompressor(BOOL);
	BOOL GetUseAudioCompressor();
	void SetUseAudioCompressor(BOOL);
	LPDISPATCH GetAudioCompressors();
	void SetAudioCompressors(LPDISPATCH);
	BOOL GetShowPreview();
	void SetShowPreview(BOOL);
	BOOL GetCaptureVideo();
	void SetCaptureVideo(BOOL);
	BOOL GetAspectRatio();
	void SetAspectRatio(BOOL);
	unsigned long GetBackgroundColor();
	void SetBackgroundColor(unsigned long);
	LPDISPATCH GetTVChannels();
	void SetTVChannels(LPDISPATCH);
	short GetCountryCode();
	void SetCountryCode(short);
	short GetChannel();
	void SetChannel(short);
	BOOL GetTVMute();
	void SetTVMute(BOOL);
	CVideoInputs GetVideoInputs();
	void SetVideoInputs(LPDISPATCH);
	short GetVideoInput();
	void SetVideoInput(short);
	LPDISPATCH GetWMVProfiles();
	void SetWMVProfiles(LPDISPATCH);
	short GetWMVProfile();
	void SetWMVProfile(short);
	BOOL GetOutputWMV();
	void SetOutputWMV(BOOL);
	short GetVideoStandard();
	void SetVideoStandard(short);
	short GetFrameRate();
	void SetFrameRate(short);
	unsigned long GetTextBgColor();
	void SetTextBgColor(unsigned long);
	unsigned long GetTextColor();
	void SetTextColor(unsigned long);
	BOOL GetTextFontBold();
	void SetTextFontBold(BOOL);
	BOOL GetTextFontItalic();
	void SetTextFontItalic(BOOL);
	CString GetTextFontName();
	void SetTextFontName(LPCTSTR);
	short GetTextFontSize();
	void SetTextFontSize(short);
	BOOL GetTextFontUnderline();
	void SetTextFontUnderline(BOOL);
	BOOL GetTextBgTransparent();
	void SetTextBgTransparent(BOOL);
	CString GetWMVCustomFileName();
	void SetWMVCustomFileName(LPCTSTR);
	BOOL GetBroadCast();
	void SetBroadCast(BOOL);
	short GetBroadCastPortNo();
	void SetBroadCastPortNo(short);
	short GetMaxClients();
	void SetMaxClients(short);
	CString GetPublishingURL();
	void SetPublishingURL(LPCTSTR);
	CString GetLicenseKey();
	void SetLicenseKey(LPCTSTR);

// Operations
public:
	short Start();
	void Stop();
	BOOL SnapShot(LPCTSTR strFileName);
	BOOL ShowVideoCapturePropertyPage();
	BOOL ScanTVChannels();
	BOOL ShowAudioCapturePropertyPage();
	BOOL ShowVideoFormatPropertyPage();
	BOOL ShowCrossbarPropertyPage();
	void DrawTime(short iX, short iY, short iDateFormat);
	void ClearTime();
	short DrawText(short iX, short iY, LPCTSTR strText);
	BOOL SnapShotJPEG(LPCTSTR strFileName, short iJPEGQuality);
	void Pause();
	void Resume();
	LPDISPATCH SnapShot2Picture();
	long SnapShot2HBITMAP();
	void ResizeControl(short iwidth, short iheight);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_VIDEOCAP1_H__723BE956_AEC5_4A0E_BA91_F54D348D2722__INCLUDED_)
